--- external/index-Dw_hLuPQ.js	2024-07-26 10:14:08
+++ external/index-Dw_hLuPQ.edit.js	2024-07-26 10:17:53
@@ -642,7 +642,13 @@
 await fetchVersions();if(currentVersion.value&&currentVersion.value.hasSecurityIssue&&nextVersions.value.length){const fixVersion=currentVersion.value.securityIssueFixVersion;let message2="Please update to latest version.";if(fixVersion){message2=`Please update to version ${fixVersion} or higher.`;}
 message2=`${message2} <a class="primary-color">More info</a>`;showToast({title:"Critical update available",message:message2,onClick:()=>{uiStore.openModal(VERSIONS_MODAL_KEY);},closeOnClick:true,customClass:"clickable",type:"warning",duration:0});}};return{currentVersion,nextVersions,hasVersionUpdates,areNotificationsEnabled,infoUrl,fetchVersions,setVersions,setVersionNotificationSettings,checkForNewVersions};});function useTitleChange(){const prependBeta=(title2)=>{const settingsStore=useSettingsStore();const{releaseChannel}=settingsStore.settings;return releaseChannel==="stable"?title2:`[${releaseChannel.toUpperCase()}] ${title2}`;};const titleSet=(workflow,status2)=>{let icon2="⚠️";if(status2==="EXECUTING"){icon2="🔄";}else if(status2==="IDLE"){icon2="▶️";}
 window.document.title=prependBeta(`n8n - ${icon2} ${workflow}`);};const titleReset=()=>{window.document.title=prependBeta("n8n - Workflow Automation");};return{titleSet,titleReset};}
-const useSettingsStore=defineStore(STORES.SETTINGS,{state:()=>({initialized:false,settings:{},userManagement:{quota:-1,showSetupOnFirstLoad:false,smtpSetup:false,authenticationMethod:UserManagementAuthenticationMethod.Email},templatesEndpointHealthy:false,api:{enabled:false,latestVersion:0,path:"/",swaggerUi:{enabled:false}},ldap:{loginLabel:"",loginEnabled:false},saml:{loginLabel:"",loginEnabled:false},mfa:{enabled:false},saveDataErrorExecution:"all",saveDataSuccessExecution:"all",saveManualExecutions:false,saveDataProgressExecution:false}),getters:{isDocker(){return this.settings.isDocker;},databaseType(){return this.settings.databaseType;},planName(){return this.settings.license.planName??"Community";},consumerId(){return this.settings.license.consumerId;},binaryDataMode(){return this.settings.binaryDataMode;},pruning(){return this.settings.pruning;},security(){return{blockFileAccessToN8nFiles:this.settings.security.blockFileAccessToN8nFiles,secureCookie:this.settings.authCookie.secure};},isEnterpriseFeatureEnabled(){return(feature)=>{var _a2;return Boolean((_a2=this.settings.enterprise)==null?void 0:_a2[feature]);};},versionCli(){return this.settings.versionCli;},nodeJsVersion(){return this.settings.nodeJsVersion;},concurrency(){return this.settings.concurrency;},isPublicApiEnabled(){return this.api.enabled;},isSwaggerUIEnabled(){return this.api.swaggerUi.enabled;},isPreviewMode(){return this.settings.previewMode;},publicApiLatestVersion(){return this.api.latestVersion;},publicApiPath(){return this.api.path;},isLdapLoginEnabled(){return this.ldap.loginEnabled;},ldapLoginLabel(){return this.ldap.loginLabel;},isSamlLoginEnabled(){return this.saml.loginEnabled;},samlLoginLabel(){return this.saml.loginLabel;},showSetupPage(){return this.userManagement.showSetupOnFirstLoad===true;},deploymentType(){var _a2;return((_a2=this.settings.deployment)==null?void 0:_a2.type)||"default";},isDesktopDeployment(){var _a2;if(!this.settings.deployment){return false;}
+const useSettingsStore=defineStore(STORES.SETTINGS,{state:()=>({initialized:false,settings:{},userManagement:{quota:-1,showSetupOnFirstLoad:false,smtpSetup:false,authenticationMethod:UserManagementAuthenticationMethod.Email},templatesEndpointHealthy:false,api:{enabled:false,latestVersion:0,path:"/",swaggerUi:{enabled:false}},ldap:{loginLabel:"",loginEnabled:false},saml:{loginLabel:"",loginEnabled:false},mfa:{enabled:false},saveDataErrorExecution:"all",saveDataSuccessExecution:"all",saveManualExecutions:false,saveDataProgressExecution:false}),getters:{isDocker(){return this.settings.isDocker;},databaseType(){return this.settings.databaseType;},planName(){return this.settings.license.planName??"Community";},consumerId(){return this.settings.license.consumerId;},binaryDataMode(){return this.settings.binaryDataMode;},pruning(){return this.settings.pruning;},security(){return{blockFileAccessToN8nFiles:this.settings.security.blockFileAccessToN8nFiles,secureCookie:this.settings.authCookie.secure};},isEnterpriseFeatureEnabled(){if (
+            [
+                EnterpriseEditionFeature.DebugInEditor
+            ].includes(feature)
+        ) {
+            return true
+        }return(feature)=>{var _a2;return Boolean((_a2=this.settings.enterprise)==null?void 0:_a2[feature]);};},versionCli(){return this.settings.versionCli;},nodeJsVersion(){return this.settings.nodeJsVersion;},concurrency(){return this.settings.concurrency;},isPublicApiEnabled(){return this.api.enabled;},isSwaggerUIEnabled(){return this.api.swaggerUi.enabled;},isPreviewMode(){return this.settings.previewMode;},publicApiLatestVersion(){return this.api.latestVersion;},publicApiPath(){return this.api.path;},isLdapLoginEnabled(){return this.ldap.loginEnabled;},ldapLoginLabel(){return this.ldap.loginLabel;},isSamlLoginEnabled(){return this.saml.loginEnabled;},samlLoginLabel(){return this.saml.loginLabel;},showSetupPage(){return this.userManagement.showSetupOnFirstLoad===true;},deploymentType(){var _a2;return((_a2=this.settings.deployment)==null?void 0:_a2.type)||"default";},isDesktopDeployment(){var _a2;if(!this.settings.deployment){return false;}
 return(_a2=this.settings.deployment)==null?void 0:_a2.type.startsWith("desktop_");},isCloudDeployment(){var _a2;return((_a2=this.settings.deployment)==null?void 0:_a2.type)==="cloud";},isSmtpSetup(){return this.userManagement.smtpSetup;},isPersonalizationSurveyEnabled(){return this.settings.telemetry&&this.settings.telemetry.enabled&&this.settings.personalizationSurveyEnabled;},telemetry(){return this.settings.telemetry;},logLevel(){return this.settings.logLevel;},isTelemetryEnabled(){return this.settings.telemetry&&this.settings.telemetry.enabled;},isMfaFeatureEnabled(){var _a2,_b;return(_b=(_a2=this.settings)==null?void 0:_a2.mfa)==null?void 0:_b.enabled;},areTagsEnabled(){return this.settings.workflowTagsDisabled!==void 0?!this.settings.workflowTagsDisabled:true;},isHiringBannerEnabled(){return this.settings.hiringBannerEnabled;},isTemplatesEnabled(){return Boolean(this.settings.templates&&this.settings.templates.enabled);},isTemplatesEndpointReachable(){return this.templatesEndpointHealthy;},templatesHost(){return this.settings.templates.host;},pushBackend(){return this.settings.pushBackend;},isCommunityNodesFeatureEnabled(){return this.settings.communityNodesEnabled;},isNpmAvailable(){return this.settings.isNpmAvailable;},allowedModules(){return this.settings.allowedModules;},isQueueModeEnabled(){return this.settings.executionMode==="queue";},isWorkerViewAvailable(){var _a2;return!!((_a2=this.settings.enterprise)==null?void 0:_a2.workerView);},workflowCallerPolicyDefaultOption(){return this.settings.workflowCallerPolicyDefaultOption;},isDefaultAuthenticationSaml(){return this.userManagement.authenticationMethod===UserManagementAuthenticationMethod.Saml;},permanentlyDismissedBanners(){var _a2;return((_a2=this.settings.banners)==null?void 0:_a2.dismissed)??[];},isBelowUserQuota(){const userStore=useUsersStore();return this.userManagement.quota===-1||this.userManagement.quota>userStore.allUsers.length;},isDevRelease(){return this.settings.releaseChannel==="dev";}},actions:{async initialize(){if(this.initialized){return;}
 const{showToast}=useToast();try{await this.getSettings();setEvaluator(this.settings.expressions.evaluator);useTitleChange().titleReset();this.initialized=true;}catch(e){showToast({title:i18n.baseText("startupError"),message:i18n.baseText("startupError.message"),type:"error",duration:0,dangerouslyUseHTMLString:true});throw e;}},setSettings(settings2){var _a2,_b,_c2,_d;this.settings=settings2;this.userManagement=settings2.userManagement;if(this.userManagement){this.userManagement.showSetupOnFirstLoad=!!settings2.userManagement.showSetupOnFirstLoad;}
 this.api=settings2.publicApi;if((_a2=settings2.sso)==null?void 0:_a2.ldap){this.ldap.loginEnabled=settings2.sso.ldap.loginEnabled;this.ldap.loginLabel=settings2.sso.ldap.loginLabel;}
\ No newline at end of file
